("79.298476s",[Lemma {lemmaName = "lemma25", lemmaSource = Nothing, hLemmas = ["lemma25"], indVar = Nothing, formula = " (flatten3 (Node Nil x y)) === (cons x (flatten3 y))"},Lemma {lemmaName = "lemma24", lemmaSource = Nothing, hLemmas = ["lemma24"], indVar = Nothing, formula = " (flatten3 Nil) === (nil :: list P.Int)"},Lemma {lemmaName = "lemma23", lemmaSource = Nothing, hLemmas = ["lemma23"], indVar = Nothing, formula = "\n  (flatten2 x (cons y (flatten2 z x2))) ===\n    (flatten2 (Node x y z) x2)"},Lemma {lemmaName = "lemma22", lemmaSource = Nothing, hLemmas = ["lemma22"], indVar = Nothing, formula = "\n  (flatten2 (Node Nil x y) z) === (cons x (flatten2 y z))"},Lemma {lemmaName = "lemma21", lemmaSource = Nothing, hLemmas = ["lemma21"], indVar = Nothing, formula = "\n  (flatten2 (Node x y Nil) z) === (flatten2 x (cons y z))"},Lemma {lemmaName = "lemma20", lemmaSource = Nothing, hLemmas = ["lemma20"], indVar = Nothing, formula = " (flatten2 Nil x) === x"},Lemma {lemmaName = "lemma19", lemmaSource = Nothing, hLemmas = ["lemma19"], indVar = Nothing, formula = " (flatten1 (cons Nil x)) === (flatten1 x)"},Lemma {lemmaName = "lemma18", lemmaSource = Nothing, hLemmas = ["lemma18"], indVar = Nothing, formula = " (flatten1 (nil :: list Tree)) === (nil :: list P.Int)"},Lemma {lemmaName = "lemma17", lemmaSource = Nothing, hLemmas = ["lemma17"], indVar = Nothing, formula = "\n  ((flatten0 x) ++ (concatMapF0 y)) === (concatMapF0 (cons x y))"},Lemma {lemmaName = "lemma16", lemmaSource = Nothing, hLemmas = ["lemma16"], indVar = Nothing, formula = " (concatMapF0 (cons Nil x)) === (concatMapF0 x)"},Lemma {lemmaName = "lemma14", lemmaSource = Nothing, hLemmas = ["lemma14"], indVar = Nothing, formula = " (concatMapF0 (nil :: list Tree)) === (nil :: list P.Int)"},Lemma {lemmaName = "lemma11", lemmaSource = Nothing, hLemmas = ["lemma11"], indVar = Nothing, formula = " (flatten0 (Node Nil x y)) === (cons x (flatten0 y))"},Lemma {lemmaName = "lemma10", lemmaSource = Nothing, hLemmas = ["lemma10"], indVar = Nothing, formula = " (flatten0 Nil) === (nil :: list P.Int)"},Lemma {lemmaName = "lemma9", lemmaSource = Nothing, hLemmas = ["lemma9"], indVar = Nothing, formula = " ((cons x (nil :: list P.Int)) ++ y) === (cons x y)"},Lemma {lemmaName = "lemma8", lemmaSource = Nothing, hLemmas = ["lemma8"], indVar = Nothing, formula = " (cons x (y ++ z)) === ((cons x y) ++ z)"},Lemma {lemmaName = "lemma6", lemmaSource = Nothing, hLemmas = ["lemma6"], indVar = Nothing, formula = " ((nil :: list P.Int) ++ x) === x"}])